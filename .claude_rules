# Claude Code Rules for Granola-to-Obsidian Project

## Release Process & Structure

### Git Tagging & Releases
- **Version tags**: Use numbers only, NO "v" prefix (e.g., `1.6.2`, NOT `v1.6.2`)
- **Process**: Git tag with version number â†’ GitHub Actions handles the rest automatically
- **Release creation**: Done by `github-actions` bot, not manually
- **Assets**: GitHub Actions automatically builds and attaches required files:
  - `main.js`
  - `manifest.json` 
  - `styles.css` (if present)
  - Source code archives

### Obsidian Plugin Requirements
- **Release tag must exactly match manifest.json version**
  - Release: `1.6.2` âœ…
  - Manifest: `"version": "1.6.2"` âœ…
- **Required files as individual assets** (built by GitHub Actions):
  - main.js
  - manifest.json
  - styles.css (optional)

### Release Notes Structure
Follow the established pattern from 1.6.0:
- Clear version title (e.g., "ðŸš€ Granola Sync 1.6.2")
- Detailed changelog with sections:
  - New features
  - Bug fixes
  - Installation instructions
- Link to resolved GitHub issues
- Thank contributors

### Commit Messages
- Do NOT include Claude Code attribution in commit messages
- Keep messages clean and professional
- Focus on the actual changes made

### Version Management
- Update both `manifest.json` and `versions.json` when bumping version
- Ensure consistency across all version references
- GitHub Actions handles the rest of the release process

### Key Points
- Never manually upload release assets - GitHub Actions does this
- Version tags are the trigger for automated releases
- Obsidian validation requires exact version matching between tag and manifest